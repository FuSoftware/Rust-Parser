use std::fmt::{ self, Display, Formatter };

#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum Punctuation {
    Plus,
    Minus,
    Star,
    Slash,
    Percent,
    Caret,
    Not,
    And,
    Or,
    AndAnd,
    OrOr,
    Shl,
    Shr,
    PlusEq,
    MinusEq,
    StarEq,
    SlashEq,
    PercentEq,
    CaretEq,
    AndEq,
    OrEq,
    ShlEq,
    ShrEq,
    Eq,
    EqEq,
    Ne,
    Gt,
    Lt,
    Ge,
    Le,
    At,
    Underscore,
    Dot,
    DotDot,
    DotDotDot,
    DotDotEq,
    Comma,
    Semi,
    Colon,
    PathSep,
    RArrow,
    FatArrow,
    Pound,
    Dollar,
    Question,
}

impl Display for Punctuation {
    fn fmt(&self, f: &mut Formatter) -> fmt::Result {
        match self {
            Punctuation::Plus => write!(f, "+"),
            Punctuation::Minus => write!(f, "-"),
            Punctuation::Star => write!(f, "*"),
            Punctuation::Slash => write!(f, "/"),
            Punctuation::Percent => write!(f, "%"),
            Punctuation::Caret => write!(f, "^"),
            Punctuation::Not => write!(f, "!"),
            Punctuation::And => write!(f, "&"),
            Punctuation::Or => write!(f, "|"),
            Punctuation::AndAnd => write!(f, "&&"),
            Punctuation::OrOr => write!(f, "||"),
            Punctuation::Shl => write!(f, "<<"),
            Punctuation::Shr => write!(f, ">>"),
            Punctuation::PlusEq => write!(f, "+="),
            Punctuation::MinusEq => write!(f, "-="),
            Punctuation::StarEq => write!(f, "*="),
            Punctuation::SlashEq => write!(f, "/="),
            Punctuation::PercentEq => write!(f, "%="),
            Punctuation::CaretEq => write!(f, "^="),
            Punctuation::AndEq => write!(f, "&="),
            Punctuation::OrEq => write!(f, "|="),
            Punctuation::ShlEq => write!(f, "<<="),
            Punctuation::ShrEq => write!(f, ">>="),
            Punctuation::Eq => write!(f, "="),
            Punctuation::EqEq => write!(f, "=="),
            Punctuation::Ne => write!(f, "!="),
            Punctuation::Gt => write!(f, ">"),
            Punctuation::Lt => write!(f, "<"),
            Punctuation::Ge => write!(f, ">="),
            Punctuation::Le => write!(f, "<="),
            Punctuation::At => write!(f, "@"),
            Punctuation::Underscore => write!(f, "_"),
            Punctuation::Dot => write!(f, "."),
            Punctuation::DotDot => write!(f, ".."),
            Punctuation::DotDotDot => write!(f, "..."),
            Punctuation::DotDotEq => write!(f, "..="),
            Punctuation::Comma => write!(f, ","),
            Punctuation::Semi => write!(f, ";"),
            Punctuation::Colon => write!(f, ":"),
            Punctuation::PathSep => write!(f, "::"),
            Punctuation::RArrow => write!(f, "->"),
            Punctuation::FatArrow => write!(f, "=>"),
            Punctuation::Pound => write!(f, "#"),
            Punctuation::Dollar => write!(f, "$"),
            Punctuation::Question => write!(f, "?"),
        }
    }
}